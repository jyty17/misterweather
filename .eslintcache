[{"/Users/jerryyeh/Freedom/cadre/misterweather/src/reportWebVitals.js":"1","/Users/jerryyeh/Freedom/cadre/misterweather/src/App.js":"2","/Users/jerryyeh/Freedom/cadre/misterweather/src/components/Home/Home.js":"3","/Users/jerryyeh/Freedom/cadre/misterweather/src/index.js":"4"},{"size":362,"mtime":1612131255903,"results":"5","hashOfConfig":"6"},{"size":207,"mtime":1612153528840,"results":"7","hashOfConfig":"6"},{"size":8464,"mtime":1612154209117,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1612131255903,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16wry63",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jerryyeh/Freedom/cadre/misterweather/src/reportWebVitals.js",[],"/Users/jerryyeh/Freedom/cadre/misterweather/src/App.js",["20"],"import logo from './logo.svg';\nimport './App.css';\n\nimport Home from './components/Home/Home.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jerryyeh/Freedom/cadre/misterweather/src/components/Home/Home.js",["21","22","23"],"import React from 'react';\nimport './Home.css';\n\nimport searchIcon from './search.svg';\nimport moustache from './moustache.svg';\n\nclass Home extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\thourly: [],\n\t\t\tweek: [],\n\t\t\terror: null,\n\t\t\tisloaded: false,\n\t\t\tactivetab: 1,\n\t\t\taddress: \"10002\",\n\t\t\trelativelocation: '',\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tgrid: '',\n\t\t\tfavorites: [],\n\t\t\tforecast: '',\n\t\t\tforecasthourly: '',\n\t\t};\n\t\tthis.updateStationPoints = this.updateStationPoints.bind(this);\n\t\tthis.months_short = {\n\t\t\t'0': \"Jan\",\n\t\t\t'1': \"Feb\",\n\t\t\t'2': \"Mar\",\n\t\t\t'3': \"Apr\",\n\t\t\t'4': \"May\",\n\t\t\t'5': \"Jun\",\n\t\t\t'6': \"Jul\",\n\t\t\t'7': \"Aug\",\n\t\t\t'8': \"Sep\",\n\t\t\t'9': \"Oct\",\n\t\t\t'10': \"Nov\",\n\t\t\t'11': \"Dec\",\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getweather();\n\t\tthis.getFavorites();\n\t}\n\n\tsaveFavorites = () => {\n\t\t// const { address, x, y, gridid } = this.state;\n\t\tconst { address, forecast, forecasthourly, favorites, relativelocation } = this.state;\n\t\tconst ls = localStorage.getItem('MisterWeather');\n\t\tlet lsjson = JSON.parse(ls);\n\t\tconsole.log(ls)\n\t\tconst data = {\n\t\t\t\tforecast,\n\t\t\t\tforecasthourly,\n\t\t\t\trelativelocation\n\t\t\t};\n\t\tif (lsjson === null) {\n\t\t\tlocalStorage.setItem('MisterWeather', JSON.stringify({[address]: data}));\n\t\t\tthis.setState({\n\t\t\t\tfavorites: [...favorites, address]\n\t\t\t})\n\t\t} else {\n\t\t\tif (!lsjson[address]) {\n\t\t\t\tlocalStorage.setItem('MisterWeather', JSON.stringify({...lsjson, [address]: data}))\n\t\t\t\tthis.setState({\n\t\t\t\t\tfavorites: [...favorites, address]\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFavorites = () => {\n\t\tconst ls = localStorage.getItem('MisterWeather');\n\t\t// console.log(\"get\", ls);\n\t\tif (ls) {\n\t\t\tthis.setState({\n\t\t\t\tfavorites: Object.keys(JSON.parse(ls))\n\t\t\t})\n\t\t}\n\t\t\n\t}\n\n\tselectFavorite = (fav) => {\n\t\tconst selected = fav.target.value;\n\t\tconst ls = JSON.parse(localStorage.getItem('MisterWeather'))\n\t\tconsole.log(selected, ls, ls[selected]);\n\t\tconst { forecast, forecasthourly, relativelocation } = ls[selected]\n\t\t\n\t\tthis.updateHourly(forecasthourly);\n\t\tthis.updateWeekly(forecast);\n\t\tthis.setState({\n\t\t\trelativelocation\n\t\t})\n\t}\n\n\thandlechange = (e) => {\n\t\tthis.setState({\n\t\t\taddress: e.target.value\n\t\t});\n\t}\n\n\tselectToday = e => {\n\t\tthis.setState({\n\t\t\tactivetab: 1\n\t\t})\n\t\t// console.log(\"1\")\n\t}\n\n\tselectWeek = e => {\n\t\tthis.setState({\n\t\t\tactivetab: 2\n\t\t})\n\t\t// console.log(\"2\")\n\t}\n\n\t// gets and updates hourly weather data\n\t// updateHourly(x, y, gridId) {\n\tupdateHourly(url) {\n\t\t// fetch(`https://api.weather.gov/gridpoints/${gridId}/${x},${y}/forecast/hourly`)\n\t\tfetch(url)\n\t\t\t.then( response => response.json() )\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\t// console.log(\"response result\", result);\n\t\t\t\t\tconst dat = result.properties.periods;\n\t\t\t\t\tif (!dat) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\terror: dat.detail\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst dateToday = new Date(dat[0].startTime).getDate();\n\t\t\t\t\tlet todayDat = dat.filter( d => new Date(d.startTime).getDate() === dateToday);\n\t\t\t\t\tthis.setState({ \n\t\t\t\t\t\thourly: todayDat,\n\t\t\t\t\t\tisloaded: true,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t.catch(\n\t\t\t\t(error) => {\n\t\t\t\t\tconsole.log(error)\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisloaded: false,\n\t\t\t\t\t\t// error\n\t\t\t\t\t})\n\t\t\t})\n\t}\n\t// gets and updates weekly weather data\n\t// updateWeekly(x, y, gridId) {\n\tupdateWeekly(url) {\n\t\t// fetch(`https://api.weather.gov/gridpoints/${gridId}/${x},${y}/forecast`)\n\t\tfetch(url)\n\t\t\t.then( response => response.json() )\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tconst dat = result.properties.periods;\n\t\t\t\t\t// console.log(dat.length, dat)\n\t\t\t\t\tif (!dat) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\terror: dat.detail\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.setState({ \n\t\t\t\t\t\tweek: dat,\n\t\t\t\t\t\tisloaded: true,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t.catch(\n\t\t\t\t(error) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisloaded: false,\n\t\t\t\t\t})\n\t\t\t\t})\n\t}\n\n\tupdateStationPoints = (addr) => {\n\t\treturn fetch(addr)\n\t\t\t.then(response => response.json())\n\t\t\t.then( (result) => {\n\t\t\t\tlet latlng = result.results[\"0\"].geometry.location\n\t\t\t\tlet lat = latlng.lat\n\t\t\t\tlet lng = latlng.lng\n\t\t\t\tconsole.log()\n\t\t\t\tthis.setState({\n\t\t\t\t\trelativelocation: result.results[\"0\"].formatted_address\n\t\t\t\t})\n\t\t\t\treturn fetch(`https://api.weather.gov/points/${lat},${lng}`)\n\t\t\t\t\t.then( response => response.json())\n\t\t\t\t\t.then( (result) => {\n\t\t\t\t\t\tconst res = result.properties;\n\t\t\t\t\t\t// console.log(res.forecast, res.forecastHourly)\n\t\t\t\t\t\treturn [res.forecast, res.forecastHourly]\n\t\t\t\t\t})\n\t\t\t\t\t.catch( error => console.log(error))\n\t\t\t})\n\t\t\t.catch( (error) => console.log(error))\n\t}\n\n\n \tgetweather = async () => {\n \t\tconst addr = this.state.address\n \t\tif (addr.length === 0) {\n \t\t\treturn\n \t\t}\n \t\tconst api_key = 'AIzaSyC3Rjz__OFD4PC95xnMlFpOJQvQkvXENr0';\n\t\tconst location = addr.replaceAll(' ', '+');\n\n\t\tconst url = `https://maps.googleapis.com/maps/api/geocode/json?address=${location}&key=${api_key}`;\n\t\t// console.log(location, url)\n\t\t// const [x, y, gridid] = await this.updateStationPoints(url);\n\n\t\tconst [forecast, forecasthourly] = await this.updateStationPoints(url);\n\n\t\t// this.updateHourly(x, y, gridid);\n\t\t// this.updateWeekly(x, y, gridid);\n\t\tthis.updateHourly(forecasthourly);\n\t\tthis.updateWeekly(forecast);\n\t\tthis.setState({\n\t\t\t// relativelocation: addr,\n\t\t\tforecasthourly,\n\t\t\tforecast,\n\t\t});\n\t\t// console.log(this.state);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tactivetab, \n\t\t\tweek, \n\t\t\thourly, \n\t\t\taddress,\n\t\t\trelativelocation,\n\t\t\tisloaded,\n\t\t\tfavorites,\n\t\t\terror,\n\t\t} = this.state;\n\n\t\treturn(\n\t\t\t<div className=\"Home\">\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\tMisterWeather\n\t\t\t\t\t<img src={moustache} alt=\"\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"tab-nav flex\">\n\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t<div className=\"tab\" onClick={this.selectToday}>Today</div>\n\t\t\t\t\t\t<div className=\"tab\" onClick={this.selectWeek}>This Week</div>\n\t\t\t\t\t\t{ hourly.length !== 0 && week.length !== 0 &&\n\t\t\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t\t\t<div className=\"tab\" onClick={this.saveFavorites}>Add to favorite</div>\n\t\t\t\t\t\t\t\t{ favorites.length !== 0 && \n\t\t\t\t\t\t\t\t\t<select className=\"\" onChange={this.selectFavorite}>\n\t\t\t\t\t\t\t\t\t\t{favorites.map( f => \n\t\t\t\t\t\t\t\t\t\t\t<option key={f.key} value={f} >{f}</option>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</select> }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className=\"favorites\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tclassName=\"search\" \n\t\t\t\t\t\t\tplaceholder=\"Address or Zipcode\" \n\t\t\t\t\t\t\tonChange={this.handlechange} \n\t\t\t\t\t\t\tvalue={address}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tclassName=\"search-button\" \n\t\t\t\t\t\t\ttype=\"submit\" \n\t\t\t\t\t\t\t// value=\"Search\"\n\t\t\t\t\t\t\tonClick={this.getweather}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img className=\"search-icon\" src={searchIcon} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"panel scroll\">\n\t\t\t\t\t\t<div className=\"panel-option flex\">\n\t\t\t\t\t\t\t<div className=\"window-circle\">&#9679;</div>\n\t\t\t\t\t\t\t<div className=\"window-circle\">&#9679;</div>\n\t\t\t\t\t\t\t<div className=\"window-circle\">&#9679;</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"panel-content\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{hourly.length !== 0 && week.length !== 0 ? \n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<h1>{relativelocation.toUpperCase()}</h1>\n\t\t\t\t\t\t\t\t\t\t{activetab === 1 && \n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<h1>Today</h1>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{hourly.map( h => \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"hourlyforecast flex \" key={h.key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"forecastTime\">{new Date(h.startTime).getHours()%12}{new Date(h.startTime).getHours() < 13 ? 'AM' : 'PM'}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"forecastTemp\">{h.temperature} &#176;{h.temperatureUnit}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{h.shortForecast}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"\" src={h.icon} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{activetab === 2 && \n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<h1>This Week</h1>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"weeklyforecast flex\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{week.map( w =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"weeklyforecastdisplay\" key={w.key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{this.months_short[new Date(w.startTime).getMonth()]}. {new Date(w.startTime).getDate()}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{w.name}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{w.shortForecast}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={w.icon} alt=\"\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>{w.temperature} &#176;{w.temperatureUnit}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t{error && <div>{error}</div>}\n\t\t\t\t\t\t\t\t\t\t<h1 className=\"\">Search for a location!</h1>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/*<button onClick={this.getweather}>test</button>*/}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Home;","/Users/jerryyeh/Freedom/cadre/misterweather/src/index.js",[],{"ruleId":"24","severity":1,"message":"25","line":1,"column":8,"nodeType":"26","messageId":"27","endLine":1,"endColumn":12},{"ruleId":"24","severity":1,"message":"28","line":233,"column":4,"nodeType":"26","messageId":"27","endLine":233,"endColumn":12},{"ruleId":"29","severity":1,"message":"30","line":275,"column":8,"nodeType":"31","endLine":275,"endColumn":56},{"ruleId":"29","severity":1,"message":"30","line":300,"column":16,"nodeType":"31","endLine":300,"endColumn":49},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'isloaded' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]